{"id":"node_modules/popmotion/compositors/parallel.js","dependencies":[{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/compositors/parallel.js.map","includedInParent":true,"mtime":1525955812000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/src/compositors/parallel.ts","includedInParent":true,"mtime":1513028457000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/package.json","includedInParent":true,"mtime":1611669448384},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/package.json","includedInParent":true,"mtime":1611669448356},{"name":"./multi","loc":{"line":3,"column":22},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/compositors/parallel.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/compositors/multi.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar multi_1 = require(\"./multi\");\nvar parallel = multi_1.default({\n    getOutput: function () { return ([]); },\n    getCount: function (subs) { return subs.length; },\n    getFirst: function (subs) { return subs[0]; },\n    mapApi: function (subs, methodName) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return subs.map(function (sub, i) {\n            if (sub[methodName]) {\n                return Array.isArray(args[0])\n                    ? sub[methodName](args[0][i])\n                    : sub[methodName].apply(sub, args);\n            }\n        });\n    }; },\n    setProp: function (output, name, v) { return output[name] = v; },\n    startActions: function (actions, starter) { return actions.map(function (action, i) { return starter(action, i); }); }\n});\nexports.default = function () {\n    var actions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        actions[_i] = arguments[_i];\n    }\n    return parallel(actions);\n};\n"},"sourceMaps":{"js":{"version":3,"file":"parallel.js","sourceRoot":"","sources":["../src/compositors/parallel.ts"],"names":[],"mappings":";;AAAA,iCAA4B;AAI5B,IAAM,QAAQ,GAAG,eAAK,CAA8C;IAClE,SAAS,EAAE,cAAM,OAAA,CAAC,EAAE,CAAC,EAAJ,CAAI;IACrB,QAAQ,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,EAAX,CAAW;IAC/B,QAAQ,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,CAAC,CAAC,EAAP,CAAO;IAC3B,MAAM,EAAE,UAAC,IAAI,EAAE,UAAU,IAAK,OAAA;QAAC,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QAAK,OAAA,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,CAAC;YACzD,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAf,GAAG,EAAgB,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC;IANyC,CAMzC,EAN4B,CAM5B;IACF,OAAO,EAAE,UAAC,MAAM,EAAE,IAAI,EAAE,CAAC,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAhB,CAAgB;IAC9C,YAAY,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,CAAC,IAAK,OAAA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAlB,CAAkB,CAAC,EAA9C,CAA8C;CACnF,CAAC,CAAC;AAEH,kBAAe;IAAC,iBAAoB;SAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;QAApB,4BAAoB;;IAAK,OAAA,QAAQ,CAAC,OAAO,CAAC;AAAjB,CAAiB,CAAC","sourcesContent":["import multi from './multi';\nimport { Action } from '../action';\nimport { ColdSubscription } from '../action/types';\n\nconst parallel = multi<Action[], ColdSubscription[], any[], number>({\n  getOutput: () => ([]),\n  getCount: (subs) => subs.length,\n  getFirst: (subs) => subs[0],\n  mapApi: (subs, methodName) => (...args) => subs.map((sub, i) => {\n    if (sub[methodName]) {\n      return Array.isArray(args[0])\n        ? sub[methodName](args[0][i])\n        : sub[methodName](...args);\n    }\n  }),\n  setProp: (output, name, v) => output[name] = v,\n  startActions: (actions, starter) => actions.map((action, i) => starter(action, i))\n});\n\nexport default (...actions: Action[]) => parallel(actions);\n"]}},"error":null,"hash":"1ed0506ef0d75b7c34e050e8dc75449b","cacheData":{"env":{}}}