{"id":"node_modules/popmotion/animations/decay/index.js","dependencies":[{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/decay/index.js.map","includedInParent":true,"mtime":1525955812000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/src/animations/decay/index.ts","includedInParent":true,"mtime":1513028457000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/package.json","includedInParent":true,"mtime":1611669448384},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/package.json","includedInParent":true,"mtime":1611669448356},{"name":"framesync","loc":{"line":3,"column":26},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/decay/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/framesync/dist/framesync.es.js"},{"name":"style-value-types","loc":{"line":4,"column":34},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/decay/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/style-value-types/dist/style-value-types.es.js"},{"name":"../../action","loc":{"line":5,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/decay/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/action/index.js"},{"name":"../../action/vector","loc":{"line":6,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/decay/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/action/vector.js"},{"name":"../every-frame","loc":{"line":7,"column":28},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/decay/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/every-frame/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar framesync_1 = require(\"framesync\");\nvar style_value_types_1 = require(\"style-value-types\");\nvar action_1 = require(\"../../action\");\nvar vector_1 = require(\"../../action/vector\");\nvar every_frame_1 = require(\"../every-frame\");\nvar decay = function (props) {\n    if (props === void 0) { props = {}; }\n    return action_1.default(function (_a) {\n        var complete = _a.complete, update = _a.update;\n        var _b = props.velocity, velocity = _b === void 0 ? 0 : _b, _c = props.from, from = _c === void 0 ? 0 : _c, _d = props.power, power = _d === void 0 ? 0.8 : _d, _e = props.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = props.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = props.modifyTarget;\n        var elapsed = 0;\n        var amplitude = power * velocity;\n        var idealTarget = Math.round(from + amplitude);\n        var target = (typeof modifyTarget === 'undefined')\n            ? idealTarget\n            : modifyTarget(idealTarget);\n        var timer = every_frame_1.default().start(function () {\n            elapsed += framesync_1.timeSinceLastFrame();\n            var delta = -amplitude * Math.exp(-elapsed / timeConstant);\n            var isMoving = (delta > restDelta || delta < -restDelta);\n            var current = isMoving ? target + delta : target;\n            update(current);\n            if (!isMoving) {\n                timer.stop();\n                complete();\n            }\n        });\n        return {\n            stop: function () { return timer.stop(); }\n        };\n    });\n};\nexports.default = vector_1.default(decay, {\n    from: style_value_types_1.number.test,\n    modifyTarget: function (func) { return typeof func === 'function'; },\n    velocity: style_value_types_1.number.test\n});\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/animations/decay/index.ts"],"names":[],"mappings":";;AACA,uCAA+C;AAC/C,uDAA2C;AAC3C,uCAAkC;AAElC,8CAA+C;AAC/C,8CAAqC;AAGrC,IAAM,KAAK,GAAG,UAAC,KAAiB;IAAjB,sBAAA,EAAA,UAAiB;IAAa,OAAA,gBAAM,CAAC,UAAC,EAAoB;YAAlB,sBAAQ,EAAE,kBAAM;QAEnE,IAAA,mBAAY,EAAZ,iCAAY,EACZ,eAAQ,EAAR,6BAAQ,EACR,gBAAW,EAAX,gCAAW,EACX,uBAAkB,EAAlB,uCAAkB,EAClB,oBAAe,EAAf,oCAAe,EACf,iCAAY,CACJ;QACV,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,SAAS,GAAG,KAAK,GAAG,QAAQ,CAAC;QACnC,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;QACjD,IAAM,MAAM,GAAG,CAAC,OAAO,YAAY,KAAK,WAAW,CAAC;YAClD,CAAC,CAAC,WAAW;YACb,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAE9B,IAAM,KAAK,GAAG,qBAAO,EAAE,CAAC,KAAK,CAAC;YAC5B,OAAO,IAAI,8BAAkB,EAAE,CAAC;YAChC,IAAM,KAAK,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC;YAC7D,IAAM,QAAQ,GAAG,CAAC,KAAK,GAAG,SAAS,IAAI,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC;YAC3D,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;YAEnD,MAAM,CAAC,OAAO,CAAC,CAAC;YAEhB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,KAAK,CAAC,IAAI,EAAE,CAAC;gBACb,QAAQ,EAAE,CAAC;YACb,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC;YACL,IAAI,EAAE,cAAM,OAAA,KAAK,CAAC,IAAI,EAAE,EAAZ,CAAY;SACzB,CAAC;IACJ,CAAC,CAAC;AAjC2C,CAiC3C,CAAC;AAEH,kBAAe,gBAAY,CAAC,KAAK,EAAE;IACjC,IAAI,EAAE,0BAAM,CAAC,IAAI;IACjB,YAAY,EAAE,UAAC,IAAS,IAAK,OAAA,OAAO,IAAI,KAAK,UAAU,EAA1B,CAA0B;IACvD,QAAQ,EAAE,0BAAM,CAAC,IAAI;CACtB,CAAC,CAAC","sourcesContent":["// Implementation of https://ariya.io/2013/11/javascript-kinetic-scrolling-part-2\nimport { timeSinceLastFrame } from 'framesync';\nimport { number } from 'style-value-types';\nimport action from '../../action';\nimport { Action } from '../../action';\nimport vectorAction from '../../action/vector';\nimport onFrame from '../every-frame';\nimport { Props } from './types';\n\nconst decay = (props: Props = {}): Action => action(({ complete, update }) => {\n  const {\n    velocity = 0,\n    from = 0,\n    power = 0.8,\n    timeConstant = 350,\n    restDelta = 0.5,\n    modifyTarget\n  } = props;\n  let elapsed = 0;\n  const amplitude = power * velocity;\n  const idealTarget = Math.round(from + amplitude);\n  const target = (typeof modifyTarget === 'undefined')\n    ? idealTarget\n    : modifyTarget(idealTarget);\n\n  const timer = onFrame().start(() => {\n    elapsed += timeSinceLastFrame();\n    const delta = -amplitude * Math.exp(-elapsed / timeConstant);\n    const isMoving = (delta > restDelta || delta < -restDelta);\n    const current = isMoving ? target + delta : target;\n\n    update(current);\n\n    if (!isMoving) {\n      timer.stop();\n      complete();\n    }\n  });\n\n  return {\n    stop: () => timer.stop()\n  };\n});\n\nexport default vectorAction(decay, {\n  from: number.test,\n  modifyTarget: (func: any) => typeof func === 'function',\n  velocity: number.test\n});\n"]}},"error":null,"hash":"a19c75fe667744bd3702be2bbbcaaf6b","cacheData":{"env":{}}}