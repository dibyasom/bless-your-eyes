{"id":"node_modules/popmotion/animations/spring/index.js","dependencies":[{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js.map","includedInParent":true,"mtime":1525955813000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/src/animations/spring/index.ts","includedInParent":true,"mtime":1520683537000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/package.json","includedInParent":true,"mtime":1611669448384},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/package.json","includedInParent":true,"mtime":1611669448356},{"name":"framesync","loc":{"line":3,"column":26},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/framesync/dist/framesync.es.js"},{"name":"style-value-types","loc":{"line":4,"column":34},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/style-value-types/dist/style-value-types.es.js"},{"name":"../../action","loc":{"line":5,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/action/index.js"},{"name":"../../action/vector","loc":{"line":6,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/action/vector.js"},{"name":"../../calc","loc":{"line":7,"column":21},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/calc.js"},{"name":"../every-frame","loc":{"line":8,"column":28},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/spring/index.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/every-frame/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar framesync_1 = require(\"framesync\");\nvar style_value_types_1 = require(\"style-value-types\");\nvar action_1 = require(\"../../action\");\nvar vector_1 = require(\"../../action/vector\");\nvar calc_1 = require(\"../../calc\");\nvar every_frame_1 = require(\"../every-frame\");\nvar spring = function (props) {\n    if (props === void 0) { props = {}; }\n    return action_1.default(function (_a) {\n        var update = _a.update, complete = _a.complete;\n        var _b = props.velocity, velocity = _b === void 0 ? 0.0 : _b;\n        var _c = props.from, from = _c === void 0 ? 0.0 : _c, _d = props.to, to = _d === void 0 ? 0.0 : _d, _e = props.stiffness, stiffness = _e === void 0 ? 100 : _e, _f = props.damping, damping = _f === void 0 ? 10 : _f, _g = props.mass, mass = _g === void 0 ? 1.0 : _g, _h = props.restSpeed, restSpeed = _h === void 0 ? 0.01 : _h, _j = props.restDelta, restDelta = _j === void 0 ? 0.01 : _j;\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var t = 0;\n        var delta = to - from;\n        var position = from;\n        var prevPosition = position;\n        var springTimer = every_frame_1.default().start(function () {\n            var timeDelta = framesync_1.timeSinceLastFrame();\n            t += timeDelta;\n            var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n            var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n            prevPosition = position;\n            if (dampingRatio < 1) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                position = to - envelope * ((initialVelocity + dampingRatio * angularFreq * delta)\n                    / expoDecay * Math.sin(expoDecay * t)\n                    + delta * Math.cos(expoDecay * t));\n            }\n            else {\n                var envelope = Math.exp(-angularFreq * t);\n                position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\n            }\n            velocity = calc_1.speedPerSecond(position - prevPosition, timeDelta);\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n            var isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\n            if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\n                position = to;\n                update(position);\n                springTimer.stop();\n                complete();\n            }\n            else {\n                update(position);\n            }\n        });\n        return {\n            stop: function () { return springTimer.stop(); }\n        };\n    });\n};\nexports.default = vector_1.default(spring, {\n    from: style_value_types_1.number.test,\n    to: style_value_types_1.number.test,\n    stiffness: style_value_types_1.number.test,\n    damping: style_value_types_1.number.test,\n    mass: style_value_types_1.number.test,\n    velocity: style_value_types_1.number.test\n});\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/animations/spring/index.ts"],"names":[],"mappings":";;AAAA,uCAA+C;AAC/C,uDAA2C;AAC3C,uCAAkC;AAElC,8CAA+C;AAC/C,mCAA4C;AAC5C,8CAAqC;AAGrC,IAAM,MAAM,GAAG,UAAC,KAAuB;IAAvB,sBAAA,EAAA,UAAuB;IAAa,OAAA,gBAAM,CAAC,UAAC,EAAoB;YAAlB,kBAAM,EAAE,sBAAQ;QACtE,IAAA,mBAAc,EAAd,mCAAc,CAAW;QAE7B,IAAA,eAAU,EAAV,+BAAU,EACV,aAAQ,EAAR,6BAAQ,EACR,oBAAe,EAAf,oCAAe,EACf,kBAAY,EAAZ,iCAAY,EACZ,eAAU,EAAV,+BAAU,EACV,oBAAgB,EAAhB,qCAAgB,EAChB,oBAAgB,EAAhB,qCAAgB,CACR;QACV,IAAM,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7D,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAM,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC;QACxB,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,YAAY,GAAG,QAAQ,CAAC;QAE5B,IAAM,WAAW,GAAG,qBAAO,EAAE,CAAC,KAAK,CAAC;YAClC,IAAM,SAAS,GAAG,8BAAkB,EAAE,CAAC;YACvC,CAAC,IAAI,SAAS,CAAC;YAEf,IAAM,YAAY,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;YACjE,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;YAEvD,YAAY,GAAG,QAAQ,CAAC;YAGxB,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC;gBAC3D,IAAM,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,GAAG,YAAY,CAAC,CAAC;gBAE7E,QAAQ,GAAG,EAAE,GAAG,QAAQ,GAAG,CACzB,CAAC,eAAe,GAAG,YAAY,GAAG,WAAW,GAAG,KAAK,CAAC;sBACpD,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;sBACnC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAClC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBAC5C,QAAQ,GAAG,EAAE,GAAG,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,eAAe,GAAG,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACnF,CAAC;YAED,QAAQ,GAAG,qBAAc,CAAC,QAAQ,GAAG,YAAY,EAAE,SAAS,CAAC,CAAC;YAK9D,IAAM,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC;YACjE,IAAM,4BAA4B,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC;YAE1E,EAAE,CAAC,CAAC,wBAAwB,IAAI,4BAA4B,CAAC,CAAC,CAAC;gBAC7D,QAAQ,GAAG,EAAE,CAAC;gBACd,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACjB,WAAW,CAAC,IAAI,EAAE,CAAC;gBACnB,QAAQ,EAAE,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC;YACL,IAAI,EAAE,cAAM,OAAA,WAAW,CAAC,IAAI,EAAE,EAAlB,CAAkB;SAC/B,CAAC;IACJ,CAAC,CAAC;AA9DkD,CA8DlD,CAAC;AAEH,kBAAe,gBAAY,CAAC,MAAM,EAAE;IAClC,IAAI,EAAE,0BAAM,CAAC,IAAI;IACjB,EAAE,EAAE,0BAAM,CAAC,IAAI;IACf,SAAS,EAAE,0BAAM,CAAC,IAAI;IACtB,OAAO,EAAE,0BAAM,CAAC,IAAI;IACpB,IAAI,EAAE,0BAAM,CAAC,IAAI;IACjB,QAAQ,EAAE,0BAAM,CAAC,IAAI;CACtB,CAAC,CAAC","sourcesContent":["import { timeSinceLastFrame } from 'framesync';\nimport { number } from 'style-value-types';\nimport action from '../../action';\nimport { Action } from '../../action';\nimport vectorAction from '../../action/vector';\nimport { speedPerSecond } from '../../calc';\nimport onFrame from '../every-frame';\nimport { SpringInterface, SpringProps } from './types';\n\nconst spring = (props: SpringProps = {}): Action => action(({ update, complete }): SpringInterface => {\n  let { velocity = 0.0 } = props;\n  const {\n    from = 0.0,\n    to = 0.0,\n    stiffness = 100,\n    damping = 10,\n    mass = 1.0,\n    restSpeed = 0.01,\n    restDelta = 0.01\n  } = props;\n  const initialVelocity = velocity ? - (velocity / 1000) : 0.0;\n  let t = 0;\n  const delta = to - from;\n  let position = from;\n  let prevPosition = position;\n\n  const springTimer = onFrame().start(() => {\n    const timeDelta = timeSinceLastFrame();\n    t += timeDelta;\n\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const angularFreq = Math.sqrt(stiffness / mass) / 1000;\n\n    prevPosition = position;\n\n    // Underdamped\n    if (dampingRatio < 1) {\n      const envelope = Math.exp(-dampingRatio * angularFreq * t);\n      const expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n\n      position = to - envelope * (\n        (initialVelocity + dampingRatio * angularFreq * delta)\n        / expoDecay * Math.sin(expoDecay * t)\n        + delta * Math.cos(expoDecay * t)\n      );\n    } else {\n      const envelope = Math.exp(-angularFreq * t);\n      position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\n    }\n\n    velocity = speedPerSecond(position - prevPosition, timeDelta);\n\n    // Check if simulation is complete\n    // We do this here instead of `isActionComplete` as it allows us\n    // to clamp to end during update)\n    const isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n    const isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\n\n    if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\n      position = to;\n      update(position);\n      springTimer.stop();\n      complete();\n    } else {\n      update(position);\n    }\n  });\n\n  return {\n    stop: () => springTimer.stop()\n  };\n});\n\nexport default vectorAction(spring, {\n  from: number.test,\n  to: number.test,\n  stiffness: number.test,\n  damping: number.test,\n  mass: number.test,\n  velocity: number.test\n});\n"]}},"error":null,"hash":"3e739260932552f7c95fe1b0d095a36c","cacheData":{"env":{}}}