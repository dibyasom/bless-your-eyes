{"id":"node_modules/popmotion/input/pointer/utils.js","dependencies":[{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/input/pointer/utils.js.map","includedInParent":true,"mtime":1525955813000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/src/input/pointer/utils.ts","includedInParent":true,"mtime":1513028457000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/package.json","includedInParent":true,"mtime":1611669448384},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/package.json","includedInParent":true,"mtime":1611669448356}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultPointerPos = function () { return ({\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    x: 0,\n    y: 0\n}); };\nexports.eventToPoint = function (e, point) {\n    if (point === void 0) { point = exports.defaultPointerPos(); }\n    point.clientX = point.x = e.clientX;\n    point.clientY = point.y = e.clientY;\n    point.pageX = e.pageX;\n    point.pageY = e.pageY;\n    return point;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/input/pointer/utils.ts"],"names":[],"mappings":";;AAEa,QAAA,iBAAiB,GAAG,cAAoB,OAAA,CAAC;IACpD,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,CAAC;IACV,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;CACL,CAAC,EAPmD,CAOnD,CAAC;AAEU,QAAA,YAAY,GAAG,UAAC,CAAqB,EAAE,KAAyC;IAAzC,sBAAA,EAAA,QAAsB,yBAAiB,EAAE;IAC3F,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;IACpC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;IACpC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACtB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACtB,MAAM,CAAC,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { PointerPoint } from './types';\n\nexport const defaultPointerPos = (): PointerPoint => ({\n  clientX: 0,\n  clientY: 0,\n  pageX: 0,\n  pageY: 0,\n  x: 0,\n  y: 0\n});\n\nexport const eventToPoint = (e: Touch | MouseEvent, point: PointerPoint = defaultPointerPos()): PointerPoint => {\n  point.clientX = point.x = e.clientX;\n  point.clientY = point.y = e.clientY;\n  point.pageX = e.pageX;\n  point.pageY = e.pageY;\n  return point;\n};\n"]}},"error":null,"hash":"8272584f1a852e1e8f3a40a159df025a","cacheData":{"env":{}}}