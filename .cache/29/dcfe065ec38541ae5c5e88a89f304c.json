{"id":"node_modules/popmotion/animations/tween/scrubber.js","dependencies":[{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/tween/scrubber.js.map","includedInParent":true,"mtime":1525955812000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/src/animations/tween/scrubber.ts","includedInParent":true,"mtime":1513028457000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/package.json","includedInParent":true,"mtime":1611669448384},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/package.json","includedInParent":true,"mtime":1611669448356},{"name":"style-value-types","loc":{"line":3,"column":34},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/tween/scrubber.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/style-value-types/dist/style-value-types.es.js"},{"name":"../../action","loc":{"line":4,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/tween/scrubber.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/action/index.js"},{"name":"../../action/vector","loc":{"line":5,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/tween/scrubber.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/action/vector.js"},{"name":"../../calc","loc":{"line":6,"column":21},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/tween/scrubber.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/calc.js"},{"name":"../../easing","loc":{"line":7,"column":23},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/animations/tween/scrubber.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/easing.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar style_value_types_1 = require(\"style-value-types\");\nvar action_1 = require(\"../../action\");\nvar vector_1 = require(\"../../action/vector\");\nvar calc_1 = require(\"../../calc\");\nvar easing_1 = require(\"../../easing\");\nvar scrubber = function (_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, _d = _a.ease, ease = _d === void 0 ? easing_1.linear : _d;\n    return action_1.default(function (_a) {\n        var update = _a.update;\n        return ({\n            seek: function (progress) { return update(progress); }\n        });\n    }).pipe(ease, function (v) { return calc_1.getValueFromProgress(from, to, v); });\n};\nexports.default = vector_1.default(scrubber, {\n    ease: function (func) { return typeof func === 'function'; },\n    from: style_value_types_1.number.test,\n    to: style_value_types_1.number.test\n});\n"},"sourceMaps":{"js":{"version":3,"file":"scrubber.js","sourceRoot":"","sources":["../../src/animations/tween/scrubber.ts"],"names":[],"mappings":";;AAAA,uDAA2C;AAC3C,uCAA8C;AAC9C,8CAA+C;AAC/C,mCAAkD;AAClD,uCAAsC;AAMtC,IAAM,QAAQ,GAAG,UAAC,EAAmC;QAAjC,YAAQ,EAAR,6BAAQ,EAAE,UAAM,EAAN,2BAAM,EAAE,YAAa,EAAb,2CAAa;IACjD,OAAA,gBAAM,CAAC,UAAC,EAAU;YAAR,kBAAM;QAA6B,OAAA,CAAC;YAC5C,IAAI,EAAE,UAAC,QAAQ,IAAK,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAhB,CAAgB;SACrC,CAAC;IAF2C,CAE3C,CAAC,CAAC,IAAI,CACN,IAAI,EACJ,UAAC,CAAS,IAAK,OAAA,2BAAoB,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAjC,CAAiC,CACjD;AALD,CAKC,CAAC;AAEJ,kBAAe,gBAAY,CAAC,QAAQ,EAAE;IACpC,IAAI,EAAE,UAAC,IAAS,IAAK,OAAA,OAAO,IAAI,KAAK,UAAU,EAA1B,CAA0B;IAC/C,IAAI,EAAE,0BAAM,CAAC,IAAI;IACjB,EAAE,EAAE,0BAAM,CAAC,IAAI;CAChB,CAAC,CAAC","sourcesContent":["import { number } from 'style-value-types';\nimport action, { Action } from '../../action';\nimport vectorAction from '../../action/vector';\nimport { getValueFromProgress } from '../../calc';\nimport { linear } from '../../easing';\n\nexport type ScrubberSubscription = {\n  seek: (progress: number) => any\n};\n\nconst scrubber = ({ from = 0, to = 1, ease = linear }): Action =>\n  action(({ update }): ScrubberSubscription => ({\n    seek: (progress) => update(progress)\n  })).pipe(\n    ease,\n    (v: number) => getValueFromProgress(from, to, v)\n  );\n\nexport default vectorAction(scrubber, {\n  ease: (func: any) => typeof func === 'function',\n  from: number.test,\n  to: number.test\n});\n"]}},"error":null,"hash":"b0581cd048ff5834152f325518fcb5be","cacheData":{"env":{}}}