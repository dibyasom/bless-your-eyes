{"id":"node_modules/popmotion/compositors/composite.js","dependencies":[{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/compositors/composite.js.map","includedInParent":true,"mtime":1525955812000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/src/compositors/composite.ts","includedInParent":true,"mtime":1513028457000},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/package.json","includedInParent":true,"mtime":1611669448384},{"name":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/package.json","includedInParent":true,"mtime":1611669448356},{"name":"./multi","loc":{"line":3,"column":22},"parent":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/compositors/composite.js","resolved":"/home/divyu/Documents/GitHub/bless-your-eyes/node_modules/popmotion/compositors/multi.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar multi_1 = require(\"./multi\");\nvar composite = multi_1.default({\n    getOutput: function () { return ({}); },\n    getCount: function (subs) { return Object.keys(subs).length; },\n    getFirst: function (subs) { return subs[Object.keys(subs)[0]]; },\n    mapApi: function (subs, methodName) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Object.keys(subs)\n            .reduce(function (output, propKey) {\n            if (subs[propKey][methodName]) {\n                (args[0] && args[0][propKey] !== undefined)\n                    ? output[propKey] = subs[propKey][methodName](args[0][propKey])\n                    : output[propKey] = (_a = subs[propKey])[methodName].apply(_a, args);\n            }\n            return output;\n            var _a;\n        }, {});\n    }; },\n    setProp: function (output, name, v) { return output[name] = v; },\n    startActions: function (actions, starter) { return Object.keys(actions)\n        .reduce(function (subs, key) {\n        subs[key] = starter(actions[key], key);\n        return subs;\n    }, {}); }\n});\nexports.default = composite;\n"},"sourceMaps":{"js":{"version":3,"file":"composite.js","sourceRoot":"","sources":["../src/compositors/composite.ts"],"names":[],"mappings":";;AAAA,iCAA4B;AAgB5B,IAAM,SAAS,GAAG,eAAK,CAAmD;IACxE,SAAS,EAAE,cAAM,OAAA,CAAC,EAAE,CAAC,EAAJ,CAAI;IACrB,QAAQ,EAAE,UAAC,IAAI,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAxB,CAAwB;IAC5C,QAAQ,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAA1B,CAA0B;IAC9C,MAAM,EAAE,UAAC,IAAI,EAAE,UAAU,IAAK,OAAA;QAAC,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QAAK,OAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACzD,MAAM,CAAC,UAAC,MAAgB,EAAE,OAAe;YACxC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC;oBACzC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBAC/D,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAA,KAAA,IAAI,CAAC,OAAO,CAAC,CAAA,CAAC,UAAU,CAAC,WAAI,IAAI,CAAC,CAAC;YAC3D,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;;QAChB,CAAC,EAAE,EAAE,CAAC;IARmC,CAQnC,EARsB,CAQtB;IACR,OAAO,EAAE,UAAC,MAAM,EAAE,IAAI,EAAE,CAAC,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAhB,CAAgB;IAC9C,YAAY,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACrD,MAAM,CAAC,UAAC,IAAyB,EAAE,GAAG;QACrC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,EAAE,EAAE,CAAC,EAJ4B,CAI5B;CACT,CAAC,CAAC;AAEH,kBAAe,SAAS,CAAC","sourcesContent":["import multi from './multi';\nimport { Action } from '../action';\nimport { ColdSubscription } from '../action/types';\n\ntype ActionMap = {\n  [key: string]: Action\n};\n\ntype ValueMap = {\n  [key: string]: any\n};\n\ntype ColdSubscriptionMap = {\n  [key: string]: ColdSubscription\n};\n\nconst composite = multi<ActionMap, ColdSubscriptionMap, ValueMap, string>({\n  getOutput: () => ({}),\n  getCount: (subs) => Object.keys(subs).length,\n  getFirst: (subs) => subs[Object.keys(subs)[0]],\n  mapApi: (subs, methodName) => (...args) => Object.keys(subs)\n    .reduce((output: ValueMap, propKey: string) => {\n      if (subs[propKey][methodName]) {\n        (args[0] && args[0][propKey] !== undefined)\n          ? output[propKey] = subs[propKey][methodName](args[0][propKey])\n          : output[propKey] = subs[propKey][methodName](...args);\n      }\n      return output;\n    }, {}),\n  setProp: (output, name, v) => output[name] = v,\n  startActions: (actions, starter) => Object.keys(actions)\n    .reduce((subs: ColdSubscriptionMap, key) => {\n      subs[key] = starter(actions[key], key);\n      return subs;\n    }, {})\n});\n\nexport default composite;\n"]}},"error":null,"hash":"04f5ebbadfad3abaf4fe3bc28abd0825","cacheData":{"env":{}}}